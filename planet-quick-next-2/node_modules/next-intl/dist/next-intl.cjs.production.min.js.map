{"version":3,"file":"next-intl.cjs.production.min.js","sources":["../src/shared/NextIntlClientProvider.tsx"],"sourcesContent":["'use client';\n\nimport {useRouter} from 'next/router';\nimport React, {ComponentProps} from 'react';\nimport {IntlProvider} from 'use-intl';\n\ntype Props = Omit<ComponentProps<typeof IntlProvider>, 'locale' | 'now'> & {\n  locale?: string;\n  /** If a string is supplied, make sure this conforms to the ISO 8601 format (YYYY-MM-DDTHH:mm:ss.sssZ */\n  now?: Date | string;\n};\n\nexport default function NextIntlClientProvider({\n  children,\n  locale,\n  now,\n  ...rest\n}: Props) {\n  let router;\n  try {\n    // Reading from context is practically ok to do conditionally\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    router = useRouter();\n  } catch (error) {\n    // Calling `useRouter` is not supported in the app folder\n  }\n\n  // The router can be undefined if used in a context outside\n  // of Next.js (e.g. unit tests, Storybook, ...)\n  if (!locale && router) {\n    locale = router.locale;\n  }\n\n  // Currently RSC serialize dates to strings, therefore make sure we have\n  // a date object. We might be able to remove this once more types have\n  // first-class serialization support (https://github.com/facebook/react/issues/25687)\n  if (typeof now === 'string') {\n    now = new Date(now);\n  }\n\n  if (!locale) {\n    throw new Error(\n      process.env.NODE_ENV !== 'production'\n        ? \"Couldn't determine locale. Please pass an explicit `locale` prop the provider, or if you're using the `pages` folder, use internationalized routing (https://nextjs.org/docs/advanced-features/i18n-routing).\"\n        : undefined\n    );\n  }\n\n  return (\n    <IntlProvider locale={locale} now={now} {...rest}>\n      {children}\n    </IntlProvider>\n  );\n}\n"],"names":["_excluded","NextIntlClientProvider","_ref","router","children","locale","now","rest","_objectWithoutPropertiesLoose","useRouter","error","Date","Error","undefined","React","createElement","IntlProvider","_extends"],"mappings":"6bAAa,IAAAA,EAAA,CAAA,WAAA,SAAA,OAYW,SAAAC,EAAsBC,GAKtC,IACFC,EALJC,EAAQF,EAARE,SACAC,EAAMH,EAANG,OACAC,EAAGJ,EAAHI,IACGC,oIAAIC,CAAAN,EAAAF,GAGP,IAGEG,EAASM,EAASA,WACnB,CAAC,MAAOC,GACP,CAgBF,IAXKL,GAAUF,IACbE,EAASF,EAAOE,QAMC,iBAARC,IACTA,EAAM,IAAIK,KAAKL,KAGZD,EACH,MAAM,IAAIO,WAGJC,GAIR,OACEC,UAACC,cAAAC,EAAYA,aAAAC,EAAA,CAACZ,OAAQA,EAAQC,IAAKA,GAASC,GACzCH,EAGP"}